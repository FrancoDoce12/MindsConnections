{
    "compilerOptions": {
        "target": "ESNext",
        "module": "ESNext",
        "moduleResolution": "Bundler",
        "noImplicitAny": true,
        "strictNullChecks": true,
        "exactOptionalPropertyTypes": false,
        "noFallthroughCasesInSwitch": true,
        "removeComments": true,
        "preserveConstEnums": true,
        "sourceMap": true,
        "lib": [
            "DOM",
            "ESNext"
        ],
        "jsx": "react-jsx" /* Specify JSX code generation: 'preserve', 'react-native', 'react' or 'react-jsx'. */,
        "noEmit": true /* Do not emit outputs. */,
        "isolatedModules": false /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */,
        "esModuleInterop": true /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */,
        "strict": true /* Enable all strict type-checking options. */,
        "skipLibCheck": true /* Skip type checking of declaration files. */,
        "forceConsistentCasingInFileNames": true /* Disallow inconsistently-cased references to the same file. */,
    },
    "include": [
        "src/**/*"
    ],
    "exclude": [
        "**/*.spec.ts"
    ],
    // "files": [
    //     "core.ts",
    //     "sys.ts",
    //     "types.ts",
    //     "scanner.ts",
    //     "parser.ts",
    //     "utilities.ts",
    //     "binder.ts",
    //     "checker.ts",
    //     "emitter.ts",
    //     "program.ts",
    //     "commandLineParser.ts",
    //     "tsc.ts",
    //     "diagnosticInformationMap.generated.ts"
    // ]
}